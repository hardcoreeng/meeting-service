# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}

      - name: Checking for mis-matching dependencies...      
        uses: borales/actions-yarn@v2.3.0      
        with:
          cmd: install
      
      - name: Building
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: build
  
      - name: Archive artifacts...
        uses: actions/upload-artifact@v2
        with:
          name: meeting-service-compose
          path: |
            distribution
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: hardcoreeng
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: 'Build Meeting service docker image and publish to github docker registry.'
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: borales/actions-yarn@v2.3.0
        with:
          cmd: docker-push          